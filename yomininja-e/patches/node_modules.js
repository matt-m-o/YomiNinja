const path = require('path');
const fs = require('fs');

function patchNodeWindowManager() {

    const filePath = path.join('./node_modules/node-window-manager/lib/macos.mm');

    try {
        let fileContents = fs.readFileSync( filePath, 'utf-8' );

        // Fixes getTitle() on macOS
        fileContents = fileContents.replaceAll(
            'NSString *windowName = wInfo[(id)kCGWindowOwnerName];',
            'NSString *windowName = wInfo[(id)kCGWindowName];'
        );

        fs.writeFileSync( filePath, fileContents, 'utf-8' );

    } catch (error) {
        console.error(error);
    }
}

function patchElectronChromeExtensions() {

    const filePath = path.join('./node_modules/electron-chrome-extensions/dist/preload.js');

    try {
        let fileContents = fs.readFileSync( filePath, 'utf-8' );

        if ( fileContents.includes('windows.getCurrent') )
            return;

        // Enable chrome.windows.getCurrent()
        fileContents = fileContents.replaceAll(
            "onFocusChanged: new ExtensionEvent('windows.onFocusChanged')",
            `onFocusChanged: new ExtensionEvent('windows.onFocusChanged'),
            getCurrent: invokeExtension('windows.getCurrent')`
        );

        fs.writeFileSync( filePath, fileContents, 'utf-8' );

    } catch (error) {
        console.error(error);
    }
}

patchNodeWindowManager();
patchElectronChromeExtensions();